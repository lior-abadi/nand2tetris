// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // Put your code here:
    
    Not(in=sel[0], out=notsel0); 
    Not(in=sel[1], out=notsel1); 

    // sel == 00, both not bits should be 1
    And(a=notsel0, b=notsel1, out=sela); // X0 && 0X == 00
    And(a=in, b=sela, out=a);    

    // sel == 01, the last bit should be 1
    And(a=notsel1, b=sel[0], out=selb); // 0X && X1 == 01 
    And(a=in, b=selb, out=b);    

    // sel == 10, the first bit should be 1
    And(a=notsel0, b=sel[1], out=selc); // X0 && 1X == 10
    And(a=in, b=selc, out=c);    

    // sel == 11, both bits should be 1
    And(a=sel[0], b=sel[1], out=seld); // X1 && 1X == 11
    And(a=in, b=seld, out=d);    
}